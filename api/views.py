from rest_framework import generics
from rest_framework.views import APIView
from rest_framework.response import Response

from .models import Assets, Vulnerabilities
from .serializers import AssetsSerializer, VulnerabilitiesSerializer


class AssetsAPIView(APIView):
    def get(self, request):
        if "vulnerability" in request.query_params:
            vulnerability_pk = request.query_params["vulnerability"]
            assets = Assets.objects.filter(
                vulnerability_at_host__id=vulnerability_pk
            )
        else:
            assets = Assets.objects.all()
        serializer = AssetsSerializer(assets, many=True)
        return Response(serializer.data)


class AssetAPIView(generics.RetrieveUpdateDestroyAPIView):
    queryset = Assets.objects.all()
    serializer_class = AssetsSerializer


class VulnerabilitiesAPIView(APIView):
    def get(self, request):
        if "assets" in request.query_params:
            vulnerabilities = Vulnerabilities.objects.filter(
                host=request.query_params["assets"]
            )
        else:
            vulnerabilities = Vulnerabilities.objects.all()
        serializer = VulnerabilitiesSerializer(vulnerabilities, many=True)
        return Response(serializer.data)


class VulnerabilityAPIView(generics.RetrieveUpdateDestroyAPIView):
    queryset = Vulnerabilities.objects.all()
    serializer_class = VulnerabilitiesSerializer
